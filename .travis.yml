os: linux
dist: focal
language: cpp

install:
 - sudo apt-get update
 - sudo apt-get install --yes libgtest-dev

jobs:
 include:
  - stage: Analysers_shared
    script: 
     - curl -sSL "https://github.com/facebook/infer/releases/download/v1.1.0/infer-linux64-v1.1.0.tar.xz" | 
       sudo tar -C /opt -xJ && sudo ln -s "/opt/infer-linux64-v1.1.0/bin/infer" /usr/local/bin/infer
       
     - sudo apt-get install clang-format
     - sudo apt-get install clang-tidy
     - sudo apt-get install cppcheck
     - sudo pip install scan-build
     - sudo pip install cpplint

     - cmake -B build -DBUILD_LIB=1 -DCMAKE_BUILD_TYPE=Debug
     - sudo make install -C build
     - rm -rf build
     
     - cmake -B build -DBUILD_LIB=1 -DWITH_ANALYSERS=1 -DCMAKE_BUILD_TYPE=Release
     - make -C build
     - cd build && make analysers

  - stage: Valgrind_static
    script:
     - sudo apt-get install valgrind

     - cmake -B build -DBUILD_STATIC=1 -DWITH_VALGRIND=1
     - make -C build
     - cd build/ && valgrind --leak-check=yes ctest

  - stage: Valgrind_shared
    script:
     - sudo apt-get install valgrind

     - cmake -B build -DBUILD_LIB=1 -DCMAKE_BUILD_TYPE=Debug
     - sudo make install -C build
     - rm -rf build
     
     - cmake -B build -DBUILD_LIB=1 -DWITH_VALGRIND=1 -DCMAKE_BUILD_TYPE=Release
     - make -C build
     - cd build/ && valgrind --leak-check=yes ctest

  - stage: TestCoverage
    script:
     - sudo pip install gcovr

     - cmake -B build -DBUILD_STATIC=1 -DWITH_COVERAGE=1 -DCMAKE_BUILD_TYPE=Release
     - make -C build
     - cmake -B build -DBUILD_LIB=1 -DCMAKE_BUILD_TYPE=Debug -DWITH_COVERAGE=1
     - sudo make install -C build 

     - cmake -B build -DBUILD_SHARED=1 -DWITH_COVERAGE=1 -DCMAKE_BUILD_TYPE=Release
     - make -C build

     - cd build && ctest .
     - cd ..
     - curl -Os https://uploader.codecov.io/latest/linux/codecov
     - chmod +x codecov
     - ./codecov -f <(gcovr -e '.*/tests/.*' -x)
